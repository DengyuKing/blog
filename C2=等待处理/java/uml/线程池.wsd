@startuml

interface Excutor{
    +excute()
}
interface ExecutorService{
    + shutDown()
    + shutDownNow()
    + submit()
    + invokeAll()
    + isShutDown()
    + isTerminated()

}
Excutor <|--ExecutorService

interface ScheduledExecutorService{

}
ExecutorService<|-- ScheduledExecutorService
abstract AbstractExecutorService {
    + newTaskFor()
    + submit()
    + invokeAll()

}
ExecutorService<|.. AbstractExecutorService



class ThreadPoolExecutor{

}
AbstractExecutorService <|--ThreadPoolExecutor

class ForkJoinPool{

}
AbstractExecutorService<|-- ForkJoinPool

class ScheduledThreadPoolExecutor{

}
ThreadPoolExecutor<|--ScheduledThreadPoolExecutor
ScheduledExecutorService<|..ScheduledThreadPoolExecutor

' future

interface Futrue {
    + cancel()
    + isCanceld()
    + isDone()
    + get()
}

interface Runnable{
    + run()
}

interface RunnableFuture{

}
' java 接口多继承
Futrue<|-- RunnableFuture
Runnable<|-- RunnableFuture

class FutureTask{

}

RunnableFuture<|.. FutureTask



@enduml
